<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/adapters/TransactionAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/adapters/TransactionAdapter.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package gr.android.softposecr.adapters;&#10;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.TextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;import java.util.List;&#10;import gr.android.softposecr.R;&#10;import gr.android.softposecr.model.Transaction;&#10;&#10;public class TransactionAdapter extends RecyclerView.Adapter&lt;TransactionAdapter.ViewHolder&gt; {&#10;    private final List&lt;Transaction&gt; transactions;&#10;    private Transaction selectedTransaction = null;&#10;    private final OnTransactionSelectedListener listener;&#10;&#10;    public interface OnTransactionSelectedListener {&#10;        void onTransactionSelected(Transaction transaction);&#10;    }&#10;&#10;    public TransactionAdapter(List&lt;Transaction&gt; transactions, OnTransactionSelectedListener listener) {&#10;        this.transactions = transactions;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_transaction, parent, false);&#10;        return new ViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {&#10;        Transaction transaction = transactions.get(position);&#10;        holder.transactionNumber.setText(holder.itemView.getContext().getString(&#10;            R.string.transaction_number_format, transaction.getTransactionNumber()));&#10;        holder.amount.setText(holder.itemView.getContext().getString(&#10;            R.string.amount_format, transaction.getAmount()));&#10;        holder.dateTime.setText(holder.itemView.getContext().getString(&#10;            R.string.date_format, transaction.getDateTime()));&#10;&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            int previousSelectedPosition = selectedTransaction != null ? &#10;                transactions.indexOf(selectedTransaction) : -1;&#10;            selectedTransaction = transaction;&#10;            listener.onTransactionSelected(transaction);&#10;            &#10;            if (previousSelectedPosition != -1) {&#10;                notifyItemChanged(previousSelectedPosition);&#10;            }&#10;            notifyItemChanged(position);&#10;        });&#10;&#10;        holder.itemView.setSelected(selectedTransaction == transaction);&#10;        holder.itemView.setBackgroundResource(selectedTransaction == transaction ? &#10;                R.color.icon_text : android.R.color.transparent);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return transactions.size();&#10;    }&#10;&#10;    static class ViewHolder extends RecyclerView.ViewHolder {&#10;        final TextView transactionNumber;&#10;        final TextView amount;&#10;        final TextView dateTime;&#10;&#10;        ViewHolder(View view) {&#10;            super(view);&#10;            transactionNumber = view.findViewById(R.id.transactionNumber);&#10;            amount = view.findViewById(R.id.transactionAmount);&#10;            dateTime = view.findViewById(R.id.transactionDateTime);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/model/Transaction.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/model/Transaction.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package gr.android.softposecr.model;&#10;&#10;public class Transaction {&#10;    private final String transactionNumber;&#10;    private final String amount;&#10;    private final String dateTime;&#10;&#10;    public Transaction(String transactionNumber, String amount, String dateTime) {&#10;        this.transactionNumber = transactionNumber;&#10;        this.amount = amount;&#10;        this.dateTime = dateTime;&#10;    }&#10;&#10;    public String getTransactionNumber() {&#10;        return transactionNumber;&#10;    }&#10;&#10;    public String getAmount() {&#10;        return amount;&#10;    }&#10;&#10;    public String getDateTime() {&#10;        return dateTime;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/OpeningFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/OpeningFragment.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/OpeningFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/OpeningFragment.kt" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/checkoutScreen/RefundFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/checkoutScreen/RefundFragment.java" />
              <option name="originalContent" value="package gr.android.softposecr.ui.checkoutScreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.AdapterView;&#10;import android.widget.ArrayAdapter;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.navigation.Navigation;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;import java.util.List;&#10;&#10;import gr.android.softposecr.databinding.FragmentRefundBinding;&#10;import gr.android.softposecr.transactions.SaleActivity;&#10;import gr.android.softposecr.domain.models.Transaction;&#10;&#10;public class RefundFragment extends Fragment {&#10;    private FragmentRefundBinding binding;&#10;    private List&lt;Transaction&gt; transactions;&#10;    private Transaction selectedTransaction;&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {&#10;        binding = FragmentRefundBinding.inflate(inflater, container, false);&#10;        return binding.getRoot();&#10;    }&#10;&#10;    @Override&#10;    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {&#10;        super.onViewCreated(view, savedInstanceState);&#10;        binding.backArrowButton.setOnClickListener(v -&gt; Navigation.findNavController(v).navigateUp());&#10;&#10;        binding.secondContinueButton.setOnClickListener(v -&gt;{&#10;            startRefundFromNumber();&#10;        });&#10;&#10;        binding.continueButton.setOnClickListener(v -&gt; startRefundFromList());&#10;&#10;        setupTransactionSpinner();&#10;    }&#10;&#10;    private void setupTransactionSpinner() {&#10;        transactions = createDummyTransactions();&#10;&#10;        // Sort transactions by date (newest first)&#10;        Collections.sort(transactions, (t1, t2) -&gt; t2.getDateTime().compareTo(t1.getDateTime()));&#10;&#10;        // Create display strings for spinner&#10;        List&lt;String&gt; displayItems = new ArrayList&lt;&gt;();&#10;        for (Transaction t : transactions) {&#10;            displayItems.add(String.format(&quot;Trans #%s - â‚¬%s - %s&quot;,&#10;                    t.getTransactionNumber(), t.getAmount(), t.getDateTime()));&#10;        }&#10;&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(&#10;                requireContext(),&#10;                android.R.layout.simple_spinner_item,&#10;                displayItems&#10;        );&#10;        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        binding.transactionSpinner.setAdapter(adapter);&#10;&#10;        binding.transactionSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {&#10;            @Override&#10;            public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                selectedTransaction = transactions.get(position);&#10;                binding.continueButton.setEnabled(true);&#10;            }&#10;&#10;            @Override&#10;            public void onNothingSelected(AdapterView&lt;?&gt; parent) {&#10;                binding.continueButton.setEnabled(false);&#10;            }&#10;        });&#10;    }&#10;&#10;    private List&lt;Transaction&gt; createDummyTransactions() {&#10;        List&lt;Transaction&gt; list = new ArrayList&lt;&gt;();&#10;        list.add(new Transaction(&quot;1000&quot;, &quot;25.50&quot;, &quot;2025-08-03 09:00&quot;));&#10;        list.add(new Transaction(&quot;1001&quot;, &quot;25.50&quot;, &quot;2025-08-03 09:30&quot;));&#10;        list.add(new Transaction(&quot;1002&quot;, &quot;42.99&quot;, &quot;2025-08-03 10:15&quot;));&#10;        list.add(new Transaction(&quot;1003&quot;, &quot;15.75&quot;, &quot;2025-08-04 11:20&quot;));&#10;        list.add(new Transaction(&quot;1004&quot;, &quot;89.99&quot;, &quot;2025-08-04 12:45&quot;));&#10;        list.add(new Transaction(&quot;1005&quot;, &quot;33.25&quot;, &quot;2025-08-04 13:30&quot;));&#10;        return list;&#10;    }&#10;&#10;    private void startRefundFromList() {&#10;&#10;        if (selectedTransaction != null) {&#10;            Bundle bundle = new Bundle();&#10;            bundle.putString(&quot;TRANSACTION_TYPE&quot;, &quot;REFUND&quot;);&#10;            bundle.putString(&quot;AMOUNT&quot;, selectedTransaction.getAmount());&#10;            bundle.putString(&quot;TRANSACTION_NUMBER&quot;, selectedTransaction.getTransactionNumber());&#10;            Intent intent = new Intent(requireActivity(), SaleActivity.class);&#10;            intent.putExtras(bundle);&#10;            startActivity(intent);&#10;        }&#10;    }&#10;&#10;    private void startRefundFromNumber() {&#10;        Log.d(&quot;RefundFragment&quot;, &quot;startRefundFromNumber called&quot;);&#10;&#10;        if (binding == null) {&#10;            Log.e(&quot;RefundFragment&quot;, &quot;binding is null&quot;);&#10;            return;&#10;        }&#10;&#10;        if (binding.transactionNumber == null) {&#10;            Log.e(&quot;RefundFragment&quot;, &quot;transactionNumber EditText is null&quot;);&#10;            return;&#10;        }&#10;&#10;        String transactionNumber = binding.transactionNumber.getText().toString().trim();&#10;        Log.d(&quot;RefundFragment&quot;, &quot;Transaction number entered: &quot; + transactionNumber);&#10;&#10;        if (transactions == null) {&#10;            Log.e(&quot;RefundFragment&quot;, &quot;transactions list is null&quot;);&#10;            return;&#10;        }&#10;&#10;        if (!transactionNumber.isEmpty()) {&#10;            // Find the transaction with matching number&#10;            Transaction foundTransaction = null;&#10;            for (Transaction t : transactions) {&#10;                Log.d(&quot;RefundFragment&quot;, &quot;Checking transaction: &quot; + t.getTransactionNumber());&#10;                if (t.getTransactionNumber().equals(transactionNumber)) {&#10;                    foundTransaction = t;&#10;                    Log.d(&quot;RefundFragment&quot;, &quot;Found matching transaction&quot;);&#10;                    break;&#10;                }&#10;            }&#10;            if (foundTransaction != null) {&#10;                Log.d(&quot;RefundFragment&quot;, &quot;Starting SaleActivity with transaction: &quot; + foundTransaction.getTransactionNumber());&#10;                Bundle bundle = new Bundle();&#10;                bundle.putString(&quot;TRANSACTION_TYPE&quot;, &quot;REFUND&quot;);&#10;                bundle.putString(&quot;AMOUNT&quot;, foundTransaction.getAmount());&#10;                bundle.putString(&quot;TRANSACTION_NUMBER&quot;, transactionNumber);&#10;                Intent intent = new Intent(requireActivity(), SaleActivity.class);&#10;                intent.putExtras(bundle);&#10;                startActivity(intent);&#10;            } else {&#10;                Log.d(&quot;RefundFragment&quot;, &quot;Transaction not found: &quot; + transactionNumber);&#10;                binding.transactionNumber.setError(&quot;Transaction not found&quot;);&#10;            }&#10;        } else {&#10;            Log.d(&quot;RefundFragment&quot;, &quot;Empty transaction number&quot;);&#10;            binding.transactionNumber.setError(&quot;Transaction number is required&quot;);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onDestroy() {&#10;        super.onDestroy();&#10;        binding = null;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package gr.android.softposecr.ui.checkoutScreen;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.AdapterView;&#10;import android.widget.ArrayAdapter;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.navigation.Navigation;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;import java.util.List;&#10;import java.time.LocalDateTime;&#10;import java.time.format.DateTimeFormatter;&#10;&#10;import gr.android.softposecr.databinding.FragmentRefundBinding;&#10;import gr.android.softposecr.transactions.SaleActivity;&#10;import gr.android.softposecr.domain.models.Transaction;&#10;&#10;public class RefundFragment extends Fragment {&#10;    private FragmentRefundBinding binding;&#10;    private List&lt;Transaction&gt; transactions;&#10;    private Transaction selectedTransaction;&#10;    private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd HH:mm&quot;);&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {&#10;        binding = FragmentRefundBinding.inflate(inflater, container, false);&#10;        return binding.getRoot();&#10;    }&#10;&#10;    @Override&#10;    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {&#10;        super.onViewCreated(view, savedInstanceState);&#10;        binding.backArrowButton.setOnClickListener(v -&gt; Navigation.findNavController(v).navigateUp());&#10;&#10;        binding.secondContinueButton.setOnClickListener(v -&gt;{&#10;            startRefundFromNumber();&#10;        });&#10;&#10;        binding.continueButton.setOnClickListener(v -&gt; startRefundFromList());&#10;&#10;        setupTransactionSpinner();&#10;    }&#10;&#10;    private void setupTransactionSpinner() {&#10;        transactions = createDummyTransactions();&#10;&#10;        // Sort transactions by date (newest first)&#10;        Collections.sort(transactions, (t1, t2) -&gt; t2.getDateTime().compareTo(t1.getDateTime()));&#10;&#10;        // Create display strings for spinner&#10;        List&lt;String&gt; displayItems = new ArrayList&lt;&gt;();&#10;        for (Transaction t : transactions) {&#10;            displayItems.add(String.format(&quot;Trans #%s - â‚¬%s - %s&quot;,&#10;                    t.getTransactionNumber(), t.getAmount(), t.getDateTime()));&#10;        }&#10;&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(&#10;                requireContext(),&#10;                android.R.layout.simple_spinner_item,&#10;                displayItems&#10;        );&#10;        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        binding.transactionSpinner.setAdapter(adapter);&#10;&#10;        binding.transactionSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {&#10;            @Override&#10;            public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                selectedTransaction = transactions.get(position);&#10;                binding.continueButton.setEnabled(true);&#10;            }&#10;&#10;            @Override&#10;            public void onNothingSelected(AdapterView&lt;?&gt; parent) {&#10;                binding.continueButton.setEnabled(false);&#10;            }&#10;        });&#10;    }&#10;&#10;    private List&lt;Transaction&gt; createDummyTransactions() {&#10;        List&lt;Transaction&gt; list = new ArrayList&lt;&gt;();&#10;        // Add some transactions from different dates&#10;        list.add(new Transaction(&quot;1000&quot;, &quot;25.50&quot;, &quot;2025-08-03 09:00&quot;));&#10;        list.add(new Transaction(&quot;1001&quot;, &quot;25.50&quot;, &quot;2025-08-03 09:30&quot;));&#10;        list.add(new Transaction(&quot;1002&quot;, &quot;42.99&quot;, &quot;2025-08-03 10:15&quot;));&#10;        list.add(new Transaction(&quot;1003&quot;, &quot;15.75&quot;, &quot;2025-08-03 11:20&quot;));&#10;        list.add(new Transaction(&quot;1004&quot;, &quot;89.99&quot;, &quot;2025-08-03 12:45&quot;));&#10;        list.add(new Transaction(&quot;1005&quot;, &quot;33.25&quot;, &quot;2025-08-03 13:30&quot;));&#10;&#10;        // Filter to keep only transactions before today&#10;        List&lt;Transaction&gt; filteredTransactions = new ArrayList&lt;&gt;();&#10;        LocalDateTime today = LocalDateTime.now().withHour(0).withMinute(0).withSecond(0).withNano(0);&#10;&#10;        for (Transaction t : list) {&#10;            LocalDateTime transactionDate = LocalDateTime.parse(t.getDateTime(), formatter);&#10;            if (transactionDate.isBefore(today)) {&#10;                filteredTransactions.add(t);&#10;            }&#10;        }&#10;&#10;        return filteredTransactions;&#10;    }&#10;&#10;    private void startRefundFromList() {&#10;&#10;        if (selectedTransaction != null) {&#10;            Bundle bundle = new Bundle();&#10;            bundle.putString(&quot;TRANSACTION_TYPE&quot;, &quot;REFUND&quot;);&#10;            bundle.putString(&quot;AMOUNT&quot;, selectedTransaction.getAmount());&#10;            bundle.putString(&quot;TRANSACTION_NUMBER&quot;, selectedTransaction.getTransactionNumber());&#10;            Intent intent = new Intent(requireActivity(), SaleActivity.class);&#10;            intent.putExtras(bundle);&#10;            startActivity(intent);&#10;        }&#10;    }&#10;&#10;    private void startRefundFromNumber() {&#10;        Log.d(&quot;RefundFragment&quot;, &quot;startRefundFromNumber called&quot;);&#10;&#10;        if (binding == null) {&#10;            Log.e(&quot;RefundFragment&quot;, &quot;binding is null&quot;);&#10;            return;&#10;        }&#10;&#10;        if (binding.transactionNumber == null) {&#10;            Log.e(&quot;RefundFragment&quot;, &quot;transactionNumber EditText is null&quot;);&#10;            return;&#10;        }&#10;&#10;        String transactionNumber = binding.transactionNumber.getText().toString().trim();&#10;        Log.d(&quot;RefundFragment&quot;, &quot;Transaction number entered: &quot; + transactionNumber);&#10;&#10;        if (transactions == null) {&#10;            Log.e(&quot;RefundFragment&quot;, &quot;transactions list is null&quot;);&#10;            return;&#10;        }&#10;&#10;        if (!transactionNumber.isEmpty()) {&#10;            // Find the transaction with matching number&#10;            Transaction foundTransaction = null;&#10;            for (Transaction t : transactions) {&#10;                Log.d(&quot;RefundFragment&quot;, &quot;Checking transaction: &quot; + t.getTransactionNumber());&#10;                if (t.getTransactionNumber().equals(transactionNumber)) {&#10;                    foundTransaction = t;&#10;                    Log.d(&quot;RefundFragment&quot;, &quot;Found matching transaction&quot;);&#10;                    break;&#10;                }&#10;            }&#10;            if (foundTransaction != null) {&#10;                Log.d(&quot;RefundFragment&quot;, &quot;Starting SaleActivity with transaction: &quot; + foundTransaction.getTransactionNumber());&#10;                Bundle bundle = new Bundle();&#10;                bundle.putString(&quot;TRANSACTION_TYPE&quot;, &quot;REFUND&quot;);&#10;                bundle.putString(&quot;AMOUNT&quot;, foundTransaction.getAmount());&#10;                bundle.putString(&quot;TRANSACTION_NUMBER&quot;, transactionNumber);&#10;                Intent intent = new Intent(requireActivity(), SaleActivity.class);&#10;                intent.putExtras(bundle);&#10;                startActivity(intent);&#10;            } else {&#10;                Log.d(&quot;RefundFragment&quot;, &quot;Transaction not found: &quot; + transactionNumber);&#10;                binding.transactionNumber.setError(&quot;Transaction not found&quot;);&#10;            }&#10;        } else {&#10;            Log.d(&quot;RefundFragment&quot;, &quot;Empty transaction number&quot;);&#10;            binding.transactionNumber.setError(&quot;Transaction number is required&quot;);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onDestroy() {&#10;        super.onDestroy();&#10;        binding = null;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/checkoutScreen/VoidFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/checkoutScreen/VoidFragment.java" />
              <option name="updatedContent" value="    private void setupTransactionSpinner() {&#10;        transactions = createDummyTransactions();&#10;&#10;        // Sort transactions by date (newest first)&#10;        Collections.sort(transactions, (t1, t2) -&gt; t2.getDateTime().compareTo(t1.getDateTime()));&#10;&#10;        // Create display strings for spinner&#10;        List&lt;String&gt; displayItems = new ArrayList&lt;&gt;();&#10;        for (Transaction t : transactions) {&#10;            displayItems.add(String.format(&quot;Trans #%s - â‚¬%s - %s&quot;,&#10;                t.getTransactionNumber(), t.getAmount(), t.getDateTime()));&#10;        }&#10;&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(&#10;            requireContext(),&#10;            R.layout.spinner_item,  // Custom layout for the selected item&#10;            displayItems&#10;        );&#10;        adapter.setDropDownViewResource(R.layout.spinner_dropdown_item);  // Custom layout for dropdown items&#10;        binding.transactionSpinner.setAdapter(adapter);&#10;&#10;        // ... rest of the spinner setup code ..." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/itemDetails/ItemDetailsFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/gr/android/softposecr/ui/itemDetails/ItemDetailsFragment.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/cart_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/cart_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;!-- Shadow Layer --&gt;&#10;    &lt;item&gt;&#10;        &lt;shape android:shape=&quot;rectangle&quot;&gt;&#10;            &lt;solid android:color=&quot;#0D000000&quot;/&gt; &lt;!-- 5% black shadow (0D in hex = 5% opacity) --&gt;&#10;            &lt;corners android:radius=&quot;0dp&quot;/&gt;&#10;        &lt;/shape&gt;&#10;    &lt;/item&gt;&#10;    &lt;!-- Main Background Layer, shifted slightly to create shadow effect --&gt;&#10;    &lt;item android:top=&quot;2dp&quot; android:bottom=&quot;2dp&quot;&gt;&#10;        &lt;shape android:shape=&quot;rectangle&quot;&gt;&#10;            &lt;solid android:color=&quot;@color/icon_backround&quot;/&gt;&#10;            &lt;corners android:radius=&quot;0dp&quot;/&gt;&#10;        &lt;/shape&gt;&#10;    &lt;/item&gt;&#10;&lt;/layer-list&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_refund.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_refund.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/default_backround&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/title&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@color/icon_text&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:text=&quot;Refund&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/backArrowButton&quot;&#10;        android:layout_width=&quot;40dp&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@drawable/baseline_arrow_back_24&quot;&#10;        android:backgroundTint=&quot;@color/white&quot;&#10;        android:clickable=&quot;true&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/transactionLabel&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;50dp&quot;&#10;        android:text=&quot;Select Transaction:&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/title&quot; /&gt;&#10;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/transactionSpinner&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edit_text_backround&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionLabel&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/continueButton&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:layout_marginEnd=&quot;32dp&quot;&#10;        android:background=&quot;@drawable/poppy_button&quot;&#10;        android:backgroundTint=&quot;@color/icon_text&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:enabled=&quot;false&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:padding=&quot;14dp&quot;&#10;        android:text=&quot;Continue&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionSpinner&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/orText&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;10dp&quot;&#10;        android:text=&quot;Or&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/continueButton&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/transactionNumberLabel&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;15dp&quot;&#10;        android:text=&quot;Enter Transaction Number:&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/orText&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/transactionNumber&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edit_text_backround&quot;&#10;        android:hint=&quot;ex. 000123&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionNumberLabel&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/secondContinueButton&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:layout_marginEnd=&quot;32dp&quot;&#10;        android:background=&quot;@drawable/poppy_button&quot;&#10;        android:backgroundTint=&quot;@color/icon_text&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:enabled=&quot;false&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:padding=&quot;14dp&quot;&#10;        android:text=&quot;Continue&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionNumber&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/default_backround&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/title&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@color/icon_text&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:text=&quot;Refund&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/backArrowButton&quot;&#10;        android:layout_width=&quot;40dp&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@drawable/baseline_arrow_back_24&quot;&#10;        android:backgroundTint=&quot;@color/white&quot;&#10;        android:clickable=&quot;true&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/transactionLabel&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;50dp&quot;&#10;        android:text=&quot;Select Transaction:&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/title&quot; /&gt;&#10;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/transactionSpinner&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edit_text_backround&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionLabel&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/continueButton&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:layout_marginEnd=&quot;32dp&quot;&#10;        android:background=&quot;@drawable/poppy_button&quot;&#10;        android:backgroundTint=&quot;@color/icon_text&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:enabled=&quot;false&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:padding=&quot;14dp&quot;&#10;        android:text=&quot;Continue&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionSpinner&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/orText&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;10dp&quot;&#10;        android:text=&quot;Or&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/continueButton&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/transactionNumberLabel&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;15dp&quot;&#10;        android:text=&quot;Enter Transaction Number:&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/orText&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/transactionNumber&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edit_text_backround&quot;&#10;        android:inputType=&quot;number&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionNumberLabel&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/secondContinueButton&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:layout_marginEnd=&quot;32dp&quot;&#10;        android:background=&quot;@drawable/poppy_button&quot;&#10;        android:backgroundTint=&quot;@color/icon_text&quot;&#10;        android:padding=&quot;14dp&quot;&#10;        android:text=&quot;Continue with Number&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionNumber&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_void.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_void.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/default_backround&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/title&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@color/icon_text&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:text=&quot;Void&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/backArrowButton&quot;&#10;        android:layout_width=&quot;40dp&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@drawable/baseline_arrow_back_24&quot;&#10;        android:backgroundTint=&quot;@color/white&quot;&#10;        android:clickable=&quot;true&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/transactionLabel&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;120dp&quot;&#10;        android:text=&quot;Select Transaction:&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/title&quot; /&gt;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/transactionSpinner&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edit_text_backround&quot;&#10;        android:textColorHint=&quot;@color/icon_text&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:gravity=&quot;top|start&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;normal&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionLabel&quot; /&gt;&#10;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/checkoutButton&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:background=&quot;@drawable/poppy_button&quot;&#10;        android:backgroundTint=&quot;@color/icon_text&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:enabled=&quot;false&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:padding=&quot;14dp&quot;&#10;        android:text=&quot;Continue&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@id/transactionSpinner&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionSpinner&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/default_backround&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/title&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@color/icon_text&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:text=&quot;Void&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/backArrowButton&quot;&#10;        android:layout_width=&quot;40dp&quot;&#10;        android:layout_height=&quot;40dp&quot;&#10;        android:background=&quot;@drawable/baseline_arrow_back_24&quot;&#10;        android:backgroundTint=&quot;@color/white&quot;&#10;        android:clickable=&quot;true&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/transactionLabel&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;120dp&quot;&#10;        android:text=&quot;Select Transaction:&quot;&#10;        android:textColor=&quot;@color/icon_text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/title&quot; /&gt;&#10;    &lt;Spinner&#10;        android:id=&quot;@+id/transactionSpinner&quot;&#10;        android:layout_width=&quot;300dp&quot;&#10;        android:layout_height=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:background=&quot;@drawable/edit_text_backround&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionLabel&quot; /&gt;&#10;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/checkoutButton&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;20dp&quot;&#10;        android:background=&quot;@drawable/poppy_button&quot;&#10;        android:backgroundTint=&quot;@color/icon_text&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:enabled=&quot;false&quot;&#10;        android:focusable=&quot;true&quot;&#10;        android:padding=&quot;14dp&quot;&#10;        android:text=&quot;Continue&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;20sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;@id/transactionSpinner&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/transactionSpinner&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_transaction.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_transaction.xml" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/spinner_dropdown_item.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/spinner_dropdown_item.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;TextView&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:textSize=&quot;18sp&quot;&#10;    android:textColor=&quot;@color/icon_text&quot;&#10;    android:background=&quot;@color/white&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/spinner_item.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/spinner_item.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;TextView&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:textSize=&quot;18sp&quot;&#10;    android:textColor=&quot;@color/icon_text&quot;&#10;    android:background=&quot;@drawable/edit_text_backround&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;    &lt;string name=&quot;transaction_number_format&quot;&gt;Transaction #: %s&lt;/string&gt;&#10;    &lt;string name=&quot;amount_format&quot;&gt;Amount: â‚¬%s&lt;/string&gt;&#10;    &lt;string name=&quot;date_format&quot;&gt;Date: %s&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>